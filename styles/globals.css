@import url(https://fonts.googleapis.com/css?family=Darker+Grotesque:300,regular,500,600,700,800,900);

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
	.main {
		@apply flex flex-col items-center relative w-full;
	}

	.nav-link {
		@apply text-xl font-medium cursor-pointer hover:opacity-80;
	}
	.p-h {
		@apply px-4 md:px-6 lg:px-10;
	}
	.m-h {
		@apply mx-4 md:mx-6 lg:mx-10;
	}

	/* Texts */
	.title {
		@apply text-6xl md:text-9xl;
	}
	.title-mobile-mini {
		@apply title text-5xl md:text-8xl;
	}

	/* HERO */
	.hero-btn {
		@apply font-semibold bg-white px-6 py-2 text-black rounded-md;
	}

	/* TIMER */
	.timer-container {
		@apply flex flex-col p-2 bg-black bg-opacity-50 rounded-xl;
	}
	.timer-container-mini {
		@apply timer-container bg-opacity-5;
	}
	.number-span {
		@apply font-mono text-4xl md:text-5xl font-medium;
	}
	.number-span-mini {
		@apply number-span text-lg;
	}
	.detail-span {
		@apply text-sm uppercase opacity-60 font-medium;
	}
	.detail-span-mini {
		@apply detail-span text-[10px];
	}
}

html,
body {
	overflow-x: hidden;
	scroll-behavior: smooth;
}

body {
	background: #060606;
	position: relative;
	width: 100vw;
	display: flex;
	align-items: center;
	flex-direction: column;
	box-sizing: border-box;
}

/* HAMBURGER - Mobile */
.hamburger {
	cursor: pointer;
}

.hamburger input {
	display: none;
}

.hamburger svg {
	/* The size of the SVG defines the overall size */
	height: 2.5em;
	/* Define the transition for transforming the SVG */
	transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
	fill: none;
	stroke: #000;
	stroke-linecap: round;
	stroke-linejoin: round;
	stroke-width: 3;
	/* Define the transition for transforming the Stroke */
	transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
		stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}
.line-dark {
	stroke: #fff;
}

.line-top-bottom {
	stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
	transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
	stroke-dasharray: 20 300;
	stroke-dashoffset: -32.42;
}

.cta {
	position: relative;
	font-family: inherit;
	font-weight: 500;
	font-size: 16px;
	letter-spacing: 0.05em;
	border: none;
	color: ghostwhite;
	overflow: hidden;
}

.cta-secondary {
	color: black;
}
.cta-secondary:hover {
	color: white;
}

.cta span {
	position: relative;
	z-index: 10;
	transition: color 0.4s;
	display: flex;
}

.cta::before,
.cta::after {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 0;
}

.cta::before {
	content: "";
	background: #000;
	width: 120%;
	height: 105%;
	left: -10%;
	transform: skew(30deg);
	transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);
}

.cta-secondary::before {
	content: "";
	background: #fff;
	width: 120%;
	left: -10%;
	transform: skew(30deg);
	transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);
}

.cta:hover::before {
	transform: translate3d(100%, 0, 0);
}

.cta:active {
	transform: scale(0.95);
}

.nav-link-anim {
	padding: 20px 0px;
	position: relative;
}

.nav-link-anim::before {
	transition: 300ms;
	height: 5px;
	content: "";
	position: absolute;
	background-color: #031d44;
}

.nav-link-anim-dark::before {
	background-color: #d8d8d8;
}

.nav-link-ltr::before {
	width: 0%;
	bottom: 10px;
}

.nav-link-ltr:hover::before {
	width: 100%;
}

button.stt {
	width: 140px;
	height: 56px;
	overflow: hidden;
	border: none;
	color: #000;
	background: none;
	position: relative;
	padding-bottom: 2em;
}

button.stt > div,
button.stt > svg {
	position: absolute;
	width: 100%;
	height: 100%;
	display: flex;
}

button.stt:before {
	content: "";
	position: absolute;
	height: 2px;
	bottom: 0;
	left: 0;
	width: 100%;
	transform: scaleX(0);
	transform-origin: bottom right;
	background: currentColor;
	transition: transform 0.25s ease-out;
}

button.stt:hover:before {
	transform: scaleX(1);
	transform-origin: bottom left;
}

button.stt .clone > *,
button.stt .text > * {
	opacity: 1;
	font-size: 1.3rem;
	transition: 0.2s;
	margin-left: 4px;
}

button.stt .clone > * {
	transform: translateY(60px);
}

button.stt:hover .clone > * {
	opacity: 1;
	transform: translateY(0px);
	transition: all 0.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s;
}

button.stt:hover .text > * {
	opacity: 1;
	transform: translateY(-60px);
	transition: all 0.2s cubic-bezier(0.215, 0.61, 0.355, 1) 0s;
}

button.stt:hover .clone > :nth-child(1) {
	transition-delay: 0.15s;
}

button.stt:hover .clone > :nth-child(2) {
	transition-delay: 0.2s;
}

button.stt:hover .clone > :nth-child(3) {
	transition-delay: 0.25s;
}

button.stt:hover .clone > :nth-child(4) {
	transition-delay: 0.3s;
}
/* icon style and hover */
button.stt svg {
	width: 20px;
	right: 0;
	top: 50%;
	transform: translateY(-50%) rotate(-50deg);
	transition: 0.2s ease-out;
}

button.stt:hover svg {
	transform: translateY(-50%) rotate(-90deg);
}

/** TRANSITION LOADER */
.line-wobble {
	--uib-size: 80px;
	--uib-speed: 1.55s;
	--uib-color: #26F705;
	--uib-line-weight: 5px;
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	height: var(--uib-line-weight);
	width: var(--uib-size);
	border-radius: calc(var(--uib-line-weight) / 2);
	overflow: hidden;
	transform: translate3d(0, 0, 0);
}

.line-wobble::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	background-color: var(--uib-color);
	opacity: 0.1;
}

.line-wobble::after {
	content: "";
	height: 100%;
	width: 100%;
	border-radius: calc(var(--uib-line-weight) / 2);
	animation: wobble var(--uib-speed) ease-in-out infinite;
	transform: translateX(-90%);
	background-color: var(--uib-color);
}

@keyframes wobble {
	0%,
	100% {
		transform: translateX(-90%);
	}

	50% {
		transform: translateX(90%);
	}
}
/** TRANSITION LOADER */
